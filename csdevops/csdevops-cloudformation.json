{
  "Description": "csdevops poc",
  "Resources": {
    "csdevopsVpc": { "Type": "AWS::EC2::VPC", "Properties": { "CidrBlock": "10.99.0.0/24", "Tags": [ { "Key": "Name", "Value": "csdevopsVpc" } ] } },
    "csdevopsPrivateSubnetA": { "Type": "AWS::EC2::Subnet", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "CidrBlock": "10.99.0.0/26", "AvailabilityZone": "us-east-2a", "Tags": [ { "Key": "Name", "Value": "privateSubnetA" } ] } },
    "csdevopsPrivateSubnetB": { "Type": "AWS::EC2::Subnet", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "CidrBlock": "10.99.0.64/26", "AvailabilityZone": "us-east-2b", "Tags": [ { "Key": "Name", "Value": "privateSubnetB" } ] } },
    "csdevopsPublicSubnetA": { "Type": "AWS::EC2::Subnet", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "CidrBlock": "10.99.0.128/26", "AvailabilityZone": "us-east-2a", "Tags": [ { "Key": "Name", "Value": "publicSubnetA" } ] } },
    "csdevopsPublicSubnetB": { "Type": "AWS::EC2::Subnet", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "CidrBlock": "10.99.0.192/26", "AvailabilityZone": "us-east-2b", "Tags": [ { "Key": "Name", "Value": "publicSubnetB" } ] } },
    "csdevopsPublicRouteTable": { "Type": "AWS::EC2::RouteTable", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "Tags": [ { "Key": "Name", "Value": "csdevopsPublicRouteTable" } ] } },
    "csdevopsPublicRoute1": { "Type": "AWS::EC2::Route", "DependsOn": "csdevopsInternetGateway", "Properties": { "RouteTableId": { "Ref": "csdevopsPublicRouteTable" }, "DestinationCidrBlock": "0.0.0.0/0", "GatewayId": { "Ref": "csdevopsInternetGateway" } } },
    "csdevopsPrivateRouteTable": { "Type": "AWS::EC2::RouteTable", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "Tags": [ { "Key": "Name", "Value": "csdevopsPrivateRouteTable" } ] } },
    "csdevopsPublicRouteTableAssociationA": { "Type": "AWS::EC2::SubnetRouteTableAssociation", "Properties": { "SubnetId": { "Ref": "csdevopsPublicSubnetA" }, "RouteTableId": { "Ref": "csdevopsPublicRouteTable" } } },
    "csdevopsPublicRouteTableAssociationB": { "Type": "AWS::EC2::SubnetRouteTableAssociation", "Properties": { "SubnetId": { "Ref": "csdevopsPublicSubnetB" }, "RouteTableId": { "Ref": "csdevopsPublicRouteTable" } } },
    "csdevopsPrivateRouteTableAssociationA": { "Type": "AWS::EC2::SubnetRouteTableAssociation", "Properties": { "SubnetId": { "Ref": "csdevopsPrivateSubnetA" }, "RouteTableId": { "Ref": "csdevopsPrivateRouteTable" } } },
    "csdevopsPrivateRouteTableAssociationB": { "Type": "AWS::EC2::SubnetRouteTableAssociation", "Properties": { "SubnetId": { "Ref": "csdevopsPrivateSubnetB" }, "RouteTableId": { "Ref": "csdevopsPrivateRouteTable" } } },
    "csdevopsInternetGateway": { "Type": "AWS::EC2::InternetGateway", "Properties": { "Tags": [ { "Key": "Name", "Value": "IGW" } ] } },
    "csdevopsNatGatewayA": { "Type": "AWS::EC2::NatGateway", "Properties": { "AllocationId": { "Fn::GetAtt": [ "csdevopsEip1", "AllocationId" ] }, "SubnetId": { "Ref": "csdevopsPublicSubnetA" }, "Tags": [ { "Key": "Name", "Value": "NAT A" } ] } },
    "csdevopsEip1": { "Type": "AWS::EC2::EIP", "Properties": { "Domain": "vpc", "Tags": [ { "Key": "Name", "Value": "Nat IP" } ] } },
    "csdevopsEip2": { "Type": "AWS::EC2::EIP", "Properties": { "Domain": "vpc", "Tags": [ { "Key": "Name", "Value": "ELB Public IP" } ] } },
    "csdevopsPrivateRouteA": { "Type": "AWS::EC2::Route", "Properties": { "RouteTableId": { "Ref": "csdevopsPrivateRouteTable" }, "DestinationCidrBlock": "0.0.0.0/0", "NatGatewayId": { "Ref": "csdevopsNatGatewayA" } } },
    "csdevopsVpcGatewayAttachment": { "Type": "AWS::EC2::VPCGatewayAttachment", "Properties": { "VpcId": { "Ref": "csdevopsVpc" }, "InternetGatewayId": { "Ref": "csdevopsInternetGateway" } } },
    "csdevopsDbSubnetGroup": { "Type": "AWS::RDS::DBSubnetGroup", "Properties": { "DBSubnetGroupDescription": "subnets for postgres db", "SubnetIds": [ { "Ref": "csdevopsPrivateSubnetA" }, { "Ref": "csdevopsPrivateSubnetB" } ], "Tags": [ { "Key": "String", "Value": "String" } ] } },
    "csdevopsDb": { "Type": "AWS::RDS::DBInstance", "Properties": { "DBInstanceIdentifier": "csdevopsdb", "DBName": "cscodetest", "DBInstanceClass": "db.t2.micro", "AllocatedStorage": "20", "Engine": "postgres", "EngineVersion": "11.6", "MasterUsername": "postgres", "MasterUserPassword": "uc3jageecah1Ob7K" } },
    "csdevopsDockerInstanceA": { "Type": "AWS::EC2::Instance", "Properties": { "ImageId": "ami-0d3537e1397cd4de5", "InstanceType": "t2.micro", "KeyName": "poolpog-xps", "SecurityGroupIds": [ { "Ref": "csdevopsDockerinstanceSecurityGroup" } ], "SubnetId": { "Ref": "csdevopsPublicSubnetA" }, "UserData": { "Fn::Base64": { "Fn::Join": [ "", [ "#!/bin/bash -xe\n\n", "sudo docker run --rm -d -p 80:80 strm/helloworld-http\n", "\n", "#sudo docker run -e \"DATABASE_URL=postgres://postgres:uc3jageecah1Ob7K@", { "Ref": "csdevopsDb" }, ":5432/cscodetest?sslmode=disable\" -p 5000:8000 -d pcrawfor/csdevops:v003\n", "\n" ] ] } } } },
    "csdevopsDockerInstanceB": { "Type": "AWS::EC2::Instance", "Properties": { "ImageId": "ami-0d3537e1397cd4de5", "InstanceType": "t2.micro", "KeyName": "poolpog-xps", "SecurityGroupIds": [ { "Ref": "csdevopsDockerinstanceSecurityGroup" } ], "SubnetId": { "Ref": "csdevopsPublicSubnetB" }, "UserData": { "Fn::Base64": { "Fn::Join": [ "", [ "#!/bin/bash -xe\n\n", "sudo docker run --rm -d -p 80:80 strm/helloworld-http\n", "\n", "#sudo docker run -e \"DATABASE_URL=postgres://postgres:uc3jageecah1Ob7K@", { "Ref": "csdevopsDb" }, ":5432/cscodetest?sslmode=disable\" -p 5000:8000 -d pcrawfor/csdevops:v003\n", "\n" ] ] } } } },
    "csdevopsDockerinstanceSecurityGroup": { "Type": "AWS::EC2::SecurityGroup", "Properties": { "GroupDescription": "Allow http to docker instance", "VpcId": { "Ref": "csdevopsVpc" }, "SecurityGroupIngress": [ { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 80, "CidrIp": "10.0.0.0/0" }, { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "10.0.0.0/0" }, { "IpProtocol": "tcp", "FromPort": 8000, "ToPort": 8000, "CidrIp": "10.0.0.0/0" } ], "SecurityGroupEgress": [ { "IpProtocol": "tcp", "FromPort": 0, "ToPort": 65535, "CidrIp": "0.0.0.0/0" } ] } },
    "csdevopsElbv2SecurityGroup": { "Type": "AWS::EC2::SecurityGroup", "Properties": { "GroupDescription": "Allow http from internet", "VpcId": { "Ref": "csdevopsVpc" }, "SecurityGroupIngress": [ { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 80, "CidrIp": "0.0.0.0/0" } ], "SecurityGroupEgress": [ { "IpProtocol": "tcp", "FromPort": 0, "ToPort": 65535, "CidrIp": "0.0.0.0/0" } ] } },
    "csdevopsDbSecurityGroup": { "Type": "AWS::EC2::SecurityGroup", "Properties": { "GroupDescription": "Allow connections to postgres", "VpcId": { "Ref": "csdevopsVpc" }, "SecurityGroupIngress": [ { "IpProtocol": "tcp", "FromPort": 5432, "ToPort": 5432, "CidrIp": "10.0.0.0/0" } ], "SecurityGroupEgress": [ { "IpProtocol": "tcp", "FromPort": 0, "ToPort": 65535, "CidrIp": "0.0.0.0/0" } ] } },
    "csdevopsElbv2TargetGroup": { "Type": "AWS::ElasticLoadBalancingV2::TargetGroup", "Properties": { "HealthCheckEnabled": "true", "HealthCheckIntervalSeconds": 60, "HealthCheckPath": "/", "HealthCheckPort": "80", "HealthCheckProtocol": "HTTP", "HealthCheckTimeoutSeconds": 30, "HealthyThresholdCount": 5, "Port": 80, "Protocol": "HTTP", "Targets": [ { "Id": { "Ref": "csdevopsDockerInstanceA" }, "Port": 80 }, { "Id": { "Ref": "csdevopsDockerInstanceB" }, "Port": 80 } ], "VpcId": { "Ref": "csdevopsVpc" } } },
    "csdevopsElbv2Listener": { "Type": "AWS::ElasticLoadBalancingV2::Listener", "Properties": { "DefaultActions": [ { "Type": "forward", "TargetGroupArn": { "Ref": "csdevopsElbv2TargetGroup" } } ], "LoadBalancerArn": { "Ref": "csdevopsElbv2LoadBalancer" }, "Port": 80, "Protocol": "HTTP" } },
    "csdevopsElbv2LoadBalancer": { "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer", "Properties": { "IpAddressType": "ipv4", "Scheme": "internet-facing", "SecurityGroups": [ { "Ref": "csdevopsElbv2SecurityGroup" } ], "Subnets": [ { "Ref": "csdevopsPublicSubnetA" }, { "Ref": "csdevopsPublicSubnetB" } ], "Tags": [ { "Key": "Name", "Value": "Public ELB" } ], "Type": "application" } }
  }
}
